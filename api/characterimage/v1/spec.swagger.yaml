openapi: '3.0.2'
info:
  title: Character Image
  version: '1.0'
servers:
  - url: localhost:8003/

paths:

  /body:
    post:
      description: ""
      operationId: addBody
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BodyItem'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    
    get:
      description: ""
      operationId: listBodies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BodyItem'

  /body/{bodyID}/dynamicMapping:
    post:
      description: ""
      operationId: addDynamicMapping
      parameters:
        - in: path
          name: bodyID
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                partType:
                  $ref: '#/components/schemas/DynamicPartType'
                image:
                  type: string
                  format: base64
            encoding:
              image:
                contentType: image/png
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string

  /body/{bodyID}/static:
    post:
      description: ""
      operationId: addStatic
      parameters:
        - in: path
          name: bodyID
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                partType:
                  $ref: '#/components/schemas/StaticPartType'
                image:
                  type: string
                  format: base64
                anchor:
                  $ref: '#/components/schemas/Coordinates'
            encoding:
              image:
                contentType: image/png
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
    get:
      description: ""
      operationId: listStatics
      parameters:
        - in: path
          name: bodyID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    displayName:
                      type: string
                    partType:
                      $ref: "#/components/schemas/StaticPartType"
                    image:
                      type: string
                      format: base64
              encoding:
                image:
                  contentType: image/png

  /body/{bodyID}/dynamic:
    post:
      description: ""
      operationId: addDynamic
      parameters:
        - in: path
          name: dynamicID
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                partType:
                  $ref: "#/components/schemas/DynamicPartType"
                image:
                  type: string
                  format: base64
            encoding:
              image:
                contentType: image/png
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
    get:
      description: ""
      operationId: listDyanmics
      parameters:
        - in: path
          name: bodyID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    displayName:
                      type: string
                    partType:
                      $ref: "#/components/schemas/DynamicPartType"
                    image:
                      type: string
                      format: base64
              encoding:
                image:
                  contentType: image/png
                    
  /body/{bodyID}/animation:
    post:
      description: ""
      operationId: addAnimation
      parameters:
        - in: path
          name: bodyID
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Animation'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
    get:
      description: ""
      operationId: listAnimations
      parameters:
        - in: path
          name: bodyID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Animation'

  /body/{bodyID}/animation/{animationID}/frame:
    post:
      description: ""
      operationId: addAnimationFrame
      parameters:
        - in: path
          name: bodyID
          schema:
            type: string
          required: true
        - in: path
          name: animationID
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: base64
                partsPositioning:
                  type: array
                  items:
                    type: object
                    properties:
                      partType:
                        $ref: '#/components/schemas/StaticPartType'
                      positioning:
                        $ref: '#/components/schemas/Positioning'
                propPositioning:
                  $ref: '#/components/schemas/Positioning'
                expression:
                  $ref: '#/components/schemas/ExpressionType'
            encoding:
              image:
                contentType: image/png
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string

  /prop:
    post:
      description: ""
      operationId: addProp
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                propType:
                  $ref: "#/components/schemas/PropType"
                image:
                  type: string
                  format: base64
                anchor:
                  $ref: "#/components/schemas/Coordinates"
            encoding:
              image:
                contentType: image/png
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
    get:
      description: ""
      operationId: listProps
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    displayName:
                      type: string
                    propType:
                      $ref: "#/components/schemas/PropType"
                    image:
                      type: string
                      format: base64
              encoding:
                image:
                  contentType: image/png

components:
  schemas:
    DynamicPartType:
      type: string
      enum: [
        LEFT_LEG,
        RIGHT_LEG,
        LEFT_ARM,
        RIGHT_ARM,
      ]
    
    StaticPartType:
      type: string
      enum: [
        'BODY',
        'HEAD',
        'HAIR',
        'EYES',
        'ACCESSORY_HEAD',
      ]

    PropType:
      type: string
      enum: [
        'WEAPON_MELEE_1H',
        'WEAPON_MELEE_2H',
        'RANGED_MELEE_1H',
        'RANGED_MELEE_2H',
      ]

    ExpressionType:
      type: string
      enum: [
        'NEUTRAL',
      ]

    Coordinates:
      type: object
      properties:
        x:
          type: integer
        y:
          type: integer

    Positioning:
      type: object
      properties:
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        rotation:
          type: integer

    BodyItem:
      type: object            
      properties:
        displayName:
          type: string

    Animation:
      type: object
      properties:
        displayName:
          type: string
        allowedProps:
          type: array
          items:
            $ref: '#/components/schemas/PropType'
