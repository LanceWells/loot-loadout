// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: roomsocket/roomsocket.proto

package roomsocket

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ChatCommand is a multi-purpose container for interacting with a room, and for informing the
// client when something has happened in the room.
type ChatCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	// Types that are assignable to ChatCommandOptions:
	//	*ChatCommand_Message
	//	*ChatCommand_Command
	ChatCommandOptions isChatCommand_ChatCommandOptions `protobuf_oneof:"chatCommandOptions"`
}

func (x *ChatCommand) Reset() {
	*x = ChatCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCommand) ProtoMessage() {}

func (x *ChatCommand) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCommand.ProtoReflect.Descriptor instead.
func (*ChatCommand) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{0}
}

func (x *ChatCommand) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (m *ChatCommand) GetChatCommandOptions() isChatCommand_ChatCommandOptions {
	if m != nil {
		return m.ChatCommandOptions
	}
	return nil
}

func (x *ChatCommand) GetMessage() *ChatMessage {
	if x, ok := x.GetChatCommandOptions().(*ChatCommand_Message); ok {
		return x.Message
	}
	return nil
}

func (x *ChatCommand) GetCommand() *CharacterCommand {
	if x, ok := x.GetChatCommandOptions().(*ChatCommand_Command); ok {
		return x.Command
	}
	return nil
}

type isChatCommand_ChatCommandOptions interface {
	isChatCommand_ChatCommandOptions()
}

type ChatCommand_Message struct {
	// message, if provided, indicates that the given character has sent a chat message to the room.
	Message *ChatMessage `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type ChatCommand_Command struct {
	// command, if provided, indicates that the given character has sent a command in regards to
	// their state.
	Command *CharacterCommand `protobuf:"bytes,2,opt,name=command,proto3,oneof"`
}

func (*ChatCommand_Message) isChatCommand_ChatCommandOptions() {}

func (*ChatCommand_Command) isChatCommand_ChatCommandOptions() {}

// Message indicates that a text-based chat message has been transferred.
type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// message is the chat-based message sent by the character.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// character_id is the ID for the character that either generated the message, or was impacted by
	// the message.
	CharacterId string `protobuf:"bytes,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{1}
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

// CharacterCommand indicates that a character's state has been updated.
type CharacterCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// character_id is the ID for the character that either generated the message, or was impacted by
	// the message.
	CharacterId string `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	// location, if provided, will update the given character's positional data.
	Location *CharacterCommand_Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// Types that are assignable to DisplayOptions:
	//	*CharacterCommand_Animation_
	//	*CharacterCommand_Expression_
	DisplayOptions isCharacterCommand_DisplayOptions `protobuf_oneof:"displayOptions"`
}

func (x *CharacterCommand) Reset() {
	*x = CharacterCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterCommand) ProtoMessage() {}

func (x *CharacterCommand) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterCommand.ProtoReflect.Descriptor instead.
func (*CharacterCommand) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{2}
}

func (x *CharacterCommand) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *CharacterCommand) GetLocation() *CharacterCommand_Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (m *CharacterCommand) GetDisplayOptions() isCharacterCommand_DisplayOptions {
	if m != nil {
		return m.DisplayOptions
	}
	return nil
}

func (x *CharacterCommand) GetAnimation() *CharacterCommand_Animation {
	if x, ok := x.GetDisplayOptions().(*CharacterCommand_Animation_); ok {
		return x.Animation
	}
	return nil
}

func (x *CharacterCommand) GetExpression() *CharacterCommand_Expression {
	if x, ok := x.GetDisplayOptions().(*CharacterCommand_Expression_); ok {
		return x.Expression
	}
	return nil
}

type isCharacterCommand_DisplayOptions interface {
	isCharacterCommand_DisplayOptions()
}

type CharacterCommand_Animation_ struct {
	// animation, if provided, will update the given character's animation data.
	Animation *CharacterCommand_Animation `protobuf:"bytes,3,opt,name=animation,proto3,oneof"`
}

type CharacterCommand_Expression_ struct {
	// expression, if provided, will update the given character's expression data.
	Expression *CharacterCommand_Expression `protobuf:"bytes,4,opt,name=expression,proto3,oneof"`
}

func (*CharacterCommand_Animation_) isCharacterCommand_DisplayOptions() {}

func (*CharacterCommand_Expression_) isCharacterCommand_DisplayOptions() {}

// ConnectToRoomRequest indicates a request to connect to a given chat room.
type ConnectToRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *ConnectToRoomRequest) Reset() {
	*x = ConnectToRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectToRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectToRoomRequest) ProtoMessage() {}

func (x *ConnectToRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectToRoomRequest.ProtoReflect.Descriptor instead.
func (*ConnectToRoomRequest) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectToRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// ConnectToRoomResponse indicates a response to a request to connect to a given chat room.
type ChatCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChatCommandResponse) Reset() {
	*x = ChatCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCommandResponse) ProtoMessage() {}

func (x *ChatCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCommandResponse.ProtoReflect.Descriptor instead.
func (*ChatCommandResponse) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{4}
}

// CreateRoomRequest indicates a request to create a new room.
type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{5}
}

// CreateRoomResponse is the response to a request to create a new room.
type CreateRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRoomResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// DeleteRoomRequest indicates a request to delete an existing room.
type DeleteRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
}

func (x *DeleteRoomRequest) Reset() {
	*x = DeleteRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomRequest) ProtoMessage() {}

func (x *DeleteRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoomRequest) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// DeleteRoomResponse is the response to a request to delete an existing room.
type DeleteRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRoomResponse) Reset() {
	*x = DeleteRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomResponse) ProtoMessage() {}

func (x *DeleteRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoomResponse) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{8}
}

// Location is locational data about the given character.
type CharacterCommand_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *CharacterCommand_Location) Reset() {
	*x = CharacterCommand_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterCommand_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterCommand_Location) ProtoMessage() {}

func (x *CharacterCommand_Location) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterCommand_Location.ProtoReflect.Descriptor instead.
func (*CharacterCommand_Location) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CharacterCommand_Location) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *CharacterCommand_Location) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Animation is animation data about the given character.
type CharacterCommand_Animation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// animation_id is the ID for the animation to render on the given character.
	AnimationId string `protobuf:"bytes,1,opt,name=animation_id,json=animationId,proto3" json:"animation_id,omitempty"`
}

func (x *CharacterCommand_Animation) Reset() {
	*x = CharacterCommand_Animation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterCommand_Animation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterCommand_Animation) ProtoMessage() {}

func (x *CharacterCommand_Animation) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterCommand_Animation.ProtoReflect.Descriptor instead.
func (*CharacterCommand_Animation) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{2, 1}
}

func (x *CharacterCommand_Animation) GetAnimationId() string {
	if x != nil {
		return x.AnimationId
	}
	return ""
}

// Expression is expression data about the given character.
type CharacterCommand_Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// expression_id is the ID for the expression to render on the given character.
	ExpressionId string `protobuf:"bytes,1,opt,name=expression_id,json=expressionId,proto3" json:"expression_id,omitempty"`
}

func (x *CharacterCommand_Expression) Reset() {
	*x = CharacterCommand_Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_roomsocket_roomsocket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterCommand_Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterCommand_Expression) ProtoMessage() {}

func (x *CharacterCommand_Expression) ProtoReflect() protoreflect.Message {
	mi := &file_roomsocket_roomsocket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterCommand_Expression.ProtoReflect.Descriptor instead.
func (*CharacterCommand_Expression) Descriptor() ([]byte, []int) {
	return file_roomsocket_roomsocket_proto_rawDescGZIP(), []int{2, 2}
}

func (x *CharacterCommand_Expression) GetExpressionId() string {
	if x != nil {
		return x.ExpressionId
	}
	return ""
}

var File_roomsocket_roomsocket_proto protoreflect.FileDescriptor

var file_roomsocket_roomsocket_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x6c,
	0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f,
	0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6c,
	0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f,
	0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4f, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6c, 0x61, 0x6e, 0x74, 0x73,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75,
	0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x19, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x03,
	0xf8, 0x42, 0x01, 0x22, 0x4a, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x88, 0x04, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x58, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e,
	0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x09, 0x61, 0x6e,
	0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x6c, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c,
	0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x09,
	0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x0a, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e,
	0x6c, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c,
	0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x26, 0x0a, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x79, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2a, 0x0a, 0x0c, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0b, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x3a, 0x0a, 0x0a,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x0d, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x38, 0x0a, 0x14, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x2d, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22,
	0x35, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfd, 0x03, 0x0a,
	0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x7c, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x37, 0x2e, 0x6c,
	0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f,
	0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e,
	0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x30, 0x01, 0x12, 0x77, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x2e, 0x6c, 0x61, 0x6e, 0x74, 0x73,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75,
	0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x36, 0x2e, 0x6c, 0x61, 0x6e, 0x74, 0x73,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75,
	0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7b, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x34, 0x2e, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f,
	0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7b, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x34, 0x2e,
	0x6c, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c,
	0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6c, 0x61, 0x6e, 0x74, 0x73, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x2e, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x61, 0x6e, 0x74, 0x73,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x2f, 0x6c, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75,
	0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_roomsocket_roomsocket_proto_rawDescOnce sync.Once
	file_roomsocket_roomsocket_proto_rawDescData = file_roomsocket_roomsocket_proto_rawDesc
)

func file_roomsocket_roomsocket_proto_rawDescGZIP() []byte {
	file_roomsocket_roomsocket_proto_rawDescOnce.Do(func() {
		file_roomsocket_roomsocket_proto_rawDescData = protoimpl.X.CompressGZIP(file_roomsocket_roomsocket_proto_rawDescData)
	})
	return file_roomsocket_roomsocket_proto_rawDescData
}

var file_roomsocket_roomsocket_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_roomsocket_roomsocket_proto_goTypes = []interface{}{
	(*ChatCommand)(nil),                 // 0: lantspants.lootloadout.roomsocket.ChatCommand
	(*ChatMessage)(nil),                 // 1: lantspants.lootloadout.roomsocket.ChatMessage
	(*CharacterCommand)(nil),            // 2: lantspants.lootloadout.roomsocket.CharacterCommand
	(*ConnectToRoomRequest)(nil),        // 3: lantspants.lootloadout.roomsocket.ConnectToRoomRequest
	(*ChatCommandResponse)(nil),         // 4: lantspants.lootloadout.roomsocket.ChatCommandResponse
	(*CreateRoomRequest)(nil),           // 5: lantspants.lootloadout.roomsocket.CreateRoomRequest
	(*CreateRoomResponse)(nil),          // 6: lantspants.lootloadout.roomsocket.CreateRoomResponse
	(*DeleteRoomRequest)(nil),           // 7: lantspants.lootloadout.roomsocket.DeleteRoomRequest
	(*DeleteRoomResponse)(nil),          // 8: lantspants.lootloadout.roomsocket.DeleteRoomResponse
	(*CharacterCommand_Location)(nil),   // 9: lantspants.lootloadout.roomsocket.CharacterCommand.Location
	(*CharacterCommand_Animation)(nil),  // 10: lantspants.lootloadout.roomsocket.CharacterCommand.Animation
	(*CharacterCommand_Expression)(nil), // 11: lantspants.lootloadout.roomsocket.CharacterCommand.Expression
}
var file_roomsocket_roomsocket_proto_depIdxs = []int32{
	1,  // 0: lantspants.lootloadout.roomsocket.ChatCommand.message:type_name -> lantspants.lootloadout.roomsocket.ChatMessage
	2,  // 1: lantspants.lootloadout.roomsocket.ChatCommand.command:type_name -> lantspants.lootloadout.roomsocket.CharacterCommand
	9,  // 2: lantspants.lootloadout.roomsocket.CharacterCommand.location:type_name -> lantspants.lootloadout.roomsocket.CharacterCommand.Location
	10, // 3: lantspants.lootloadout.roomsocket.CharacterCommand.animation:type_name -> lantspants.lootloadout.roomsocket.CharacterCommand.Animation
	11, // 4: lantspants.lootloadout.roomsocket.CharacterCommand.expression:type_name -> lantspants.lootloadout.roomsocket.CharacterCommand.Expression
	3,  // 5: lantspants.lootloadout.roomsocket.RoomSocket.ConnectToRoom:input_type -> lantspants.lootloadout.roomsocket.ConnectToRoomRequest
	0,  // 6: lantspants.lootloadout.roomsocket.RoomSocket.SendMessage:input_type -> lantspants.lootloadout.roomsocket.ChatCommand
	5,  // 7: lantspants.lootloadout.roomsocket.RoomSocket.CreateRoom:input_type -> lantspants.lootloadout.roomsocket.CreateRoomRequest
	7,  // 8: lantspants.lootloadout.roomsocket.RoomSocket.DeleteRoom:input_type -> lantspants.lootloadout.roomsocket.DeleteRoomRequest
	0,  // 9: lantspants.lootloadout.roomsocket.RoomSocket.ConnectToRoom:output_type -> lantspants.lootloadout.roomsocket.ChatCommand
	4,  // 10: lantspants.lootloadout.roomsocket.RoomSocket.SendMessage:output_type -> lantspants.lootloadout.roomsocket.ChatCommandResponse
	6,  // 11: lantspants.lootloadout.roomsocket.RoomSocket.CreateRoom:output_type -> lantspants.lootloadout.roomsocket.CreateRoomResponse
	8,  // 12: lantspants.lootloadout.roomsocket.RoomSocket.DeleteRoom:output_type -> lantspants.lootloadout.roomsocket.DeleteRoomResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_roomsocket_roomsocket_proto_init() }
func file_roomsocket_roomsocket_proto_init() {
	if File_roomsocket_roomsocket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_roomsocket_roomsocket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectToRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterCommand_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterCommand_Animation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_roomsocket_roomsocket_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterCommand_Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_roomsocket_roomsocket_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ChatCommand_Message)(nil),
		(*ChatCommand_Command)(nil),
	}
	file_roomsocket_roomsocket_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CharacterCommand_Animation_)(nil),
		(*CharacterCommand_Expression_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_roomsocket_roomsocket_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_roomsocket_roomsocket_proto_goTypes,
		DependencyIndexes: file_roomsocket_roomsocket_proto_depIdxs,
		MessageInfos:      file_roomsocket_roomsocket_proto_msgTypes,
	}.Build()
	File_roomsocket_roomsocket_proto = out.File
	file_roomsocket_roomsocket_proto_rawDesc = nil
	file_roomsocket_roomsocket_proto_goTypes = nil
	file_roomsocket_roomsocket_proto_depIdxs = nil
}
