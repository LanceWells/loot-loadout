// Code generated by SQLBoiler 4.11.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("Animations", testAnimations)
	t.Run("AnimationFrames", testAnimationFrames)
	t.Run("AnimationFramePixels", testAnimationFramePixels)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositions)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositions)
	t.Run("BodyTypes", testBodyTypes)
	t.Run("ColorStrings", testColorStrings)
	t.Run("DynamicParts", testDynamicParts)
	t.Run("DynamicPartMappings", testDynamicPartMappings)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixels)
	t.Run("DynamicPartPixels", testDynamicPartPixels)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnails)
	t.Run("Props", testProps)
	t.Run("PropImages", testPropImages)
	t.Run("SchemaMigrations", testSchemaMigrations)
	t.Run("StaticParts", testStaticParts)
	t.Run("StaticPartImages", testStaticPartImages)
}

func TestDelete(t *testing.T) {
	t.Run("Animations", testAnimationsDelete)
	t.Run("AnimationFrames", testAnimationFramesDelete)
	t.Run("AnimationFramePixels", testAnimationFramePixelsDelete)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsDelete)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsDelete)
	t.Run("BodyTypes", testBodyTypesDelete)
	t.Run("ColorStrings", testColorStringsDelete)
	t.Run("DynamicParts", testDynamicPartsDelete)
	t.Run("DynamicPartMappings", testDynamicPartMappingsDelete)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsDelete)
	t.Run("DynamicPartPixels", testDynamicPartPixelsDelete)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsDelete)
	t.Run("Props", testPropsDelete)
	t.Run("PropImages", testPropImagesDelete)
	t.Run("SchemaMigrations", testSchemaMigrationsDelete)
	t.Run("StaticParts", testStaticPartsDelete)
	t.Run("StaticPartImages", testStaticPartImagesDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("Animations", testAnimationsQueryDeleteAll)
	t.Run("AnimationFrames", testAnimationFramesQueryDeleteAll)
	t.Run("AnimationFramePixels", testAnimationFramePixelsQueryDeleteAll)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsQueryDeleteAll)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsQueryDeleteAll)
	t.Run("BodyTypes", testBodyTypesQueryDeleteAll)
	t.Run("ColorStrings", testColorStringsQueryDeleteAll)
	t.Run("DynamicParts", testDynamicPartsQueryDeleteAll)
	t.Run("DynamicPartMappings", testDynamicPartMappingsQueryDeleteAll)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsQueryDeleteAll)
	t.Run("DynamicPartPixels", testDynamicPartPixelsQueryDeleteAll)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsQueryDeleteAll)
	t.Run("Props", testPropsQueryDeleteAll)
	t.Run("PropImages", testPropImagesQueryDeleteAll)
	t.Run("SchemaMigrations", testSchemaMigrationsQueryDeleteAll)
	t.Run("StaticParts", testStaticPartsQueryDeleteAll)
	t.Run("StaticPartImages", testStaticPartImagesQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("Animations", testAnimationsSliceDeleteAll)
	t.Run("AnimationFrames", testAnimationFramesSliceDeleteAll)
	t.Run("AnimationFramePixels", testAnimationFramePixelsSliceDeleteAll)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsSliceDeleteAll)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsSliceDeleteAll)
	t.Run("BodyTypes", testBodyTypesSliceDeleteAll)
	t.Run("ColorStrings", testColorStringsSliceDeleteAll)
	t.Run("DynamicParts", testDynamicPartsSliceDeleteAll)
	t.Run("DynamicPartMappings", testDynamicPartMappingsSliceDeleteAll)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsSliceDeleteAll)
	t.Run("DynamicPartPixels", testDynamicPartPixelsSliceDeleteAll)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsSliceDeleteAll)
	t.Run("Props", testPropsSliceDeleteAll)
	t.Run("PropImages", testPropImagesSliceDeleteAll)
	t.Run("SchemaMigrations", testSchemaMigrationsSliceDeleteAll)
	t.Run("StaticParts", testStaticPartsSliceDeleteAll)
	t.Run("StaticPartImages", testStaticPartImagesSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("Animations", testAnimationsExists)
	t.Run("AnimationFrames", testAnimationFramesExists)
	t.Run("AnimationFramePixels", testAnimationFramePixelsExists)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsExists)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsExists)
	t.Run("BodyTypes", testBodyTypesExists)
	t.Run("ColorStrings", testColorStringsExists)
	t.Run("DynamicParts", testDynamicPartsExists)
	t.Run("DynamicPartMappings", testDynamicPartMappingsExists)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsExists)
	t.Run("DynamicPartPixels", testDynamicPartPixelsExists)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsExists)
	t.Run("Props", testPropsExists)
	t.Run("PropImages", testPropImagesExists)
	t.Run("SchemaMigrations", testSchemaMigrationsExists)
	t.Run("StaticParts", testStaticPartsExists)
	t.Run("StaticPartImages", testStaticPartImagesExists)
}

func TestFind(t *testing.T) {
	t.Run("Animations", testAnimationsFind)
	t.Run("AnimationFrames", testAnimationFramesFind)
	t.Run("AnimationFramePixels", testAnimationFramePixelsFind)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsFind)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsFind)
	t.Run("BodyTypes", testBodyTypesFind)
	t.Run("ColorStrings", testColorStringsFind)
	t.Run("DynamicParts", testDynamicPartsFind)
	t.Run("DynamicPartMappings", testDynamicPartMappingsFind)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsFind)
	t.Run("DynamicPartPixels", testDynamicPartPixelsFind)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsFind)
	t.Run("Props", testPropsFind)
	t.Run("PropImages", testPropImagesFind)
	t.Run("SchemaMigrations", testSchemaMigrationsFind)
	t.Run("StaticParts", testStaticPartsFind)
	t.Run("StaticPartImages", testStaticPartImagesFind)
}

func TestBind(t *testing.T) {
	t.Run("Animations", testAnimationsBind)
	t.Run("AnimationFrames", testAnimationFramesBind)
	t.Run("AnimationFramePixels", testAnimationFramePixelsBind)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsBind)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsBind)
	t.Run("BodyTypes", testBodyTypesBind)
	t.Run("ColorStrings", testColorStringsBind)
	t.Run("DynamicParts", testDynamicPartsBind)
	t.Run("DynamicPartMappings", testDynamicPartMappingsBind)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsBind)
	t.Run("DynamicPartPixels", testDynamicPartPixelsBind)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsBind)
	t.Run("Props", testPropsBind)
	t.Run("PropImages", testPropImagesBind)
	t.Run("SchemaMigrations", testSchemaMigrationsBind)
	t.Run("StaticParts", testStaticPartsBind)
	t.Run("StaticPartImages", testStaticPartImagesBind)
}

func TestOne(t *testing.T) {
	t.Run("Animations", testAnimationsOne)
	t.Run("AnimationFrames", testAnimationFramesOne)
	t.Run("AnimationFramePixels", testAnimationFramePixelsOne)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsOne)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsOne)
	t.Run("BodyTypes", testBodyTypesOne)
	t.Run("ColorStrings", testColorStringsOne)
	t.Run("DynamicParts", testDynamicPartsOne)
	t.Run("DynamicPartMappings", testDynamicPartMappingsOne)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsOne)
	t.Run("DynamicPartPixels", testDynamicPartPixelsOne)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsOne)
	t.Run("Props", testPropsOne)
	t.Run("PropImages", testPropImagesOne)
	t.Run("SchemaMigrations", testSchemaMigrationsOne)
	t.Run("StaticParts", testStaticPartsOne)
	t.Run("StaticPartImages", testStaticPartImagesOne)
}

func TestAll(t *testing.T) {
	t.Run("Animations", testAnimationsAll)
	t.Run("AnimationFrames", testAnimationFramesAll)
	t.Run("AnimationFramePixels", testAnimationFramePixelsAll)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsAll)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsAll)
	t.Run("BodyTypes", testBodyTypesAll)
	t.Run("ColorStrings", testColorStringsAll)
	t.Run("DynamicParts", testDynamicPartsAll)
	t.Run("DynamicPartMappings", testDynamicPartMappingsAll)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsAll)
	t.Run("DynamicPartPixels", testDynamicPartPixelsAll)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsAll)
	t.Run("Props", testPropsAll)
	t.Run("PropImages", testPropImagesAll)
	t.Run("SchemaMigrations", testSchemaMigrationsAll)
	t.Run("StaticParts", testStaticPartsAll)
	t.Run("StaticPartImages", testStaticPartImagesAll)
}

func TestCount(t *testing.T) {
	t.Run("Animations", testAnimationsCount)
	t.Run("AnimationFrames", testAnimationFramesCount)
	t.Run("AnimationFramePixels", testAnimationFramePixelsCount)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsCount)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsCount)
	t.Run("BodyTypes", testBodyTypesCount)
	t.Run("ColorStrings", testColorStringsCount)
	t.Run("DynamicParts", testDynamicPartsCount)
	t.Run("DynamicPartMappings", testDynamicPartMappingsCount)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsCount)
	t.Run("DynamicPartPixels", testDynamicPartPixelsCount)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsCount)
	t.Run("Props", testPropsCount)
	t.Run("PropImages", testPropImagesCount)
	t.Run("SchemaMigrations", testSchemaMigrationsCount)
	t.Run("StaticParts", testStaticPartsCount)
	t.Run("StaticPartImages", testStaticPartImagesCount)
}

func TestHooks(t *testing.T) {
	t.Run("Animations", testAnimationsHooks)
	t.Run("AnimationFrames", testAnimationFramesHooks)
	t.Run("AnimationFramePixels", testAnimationFramePixelsHooks)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsHooks)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsHooks)
	t.Run("BodyTypes", testBodyTypesHooks)
	t.Run("ColorStrings", testColorStringsHooks)
	t.Run("DynamicParts", testDynamicPartsHooks)
	t.Run("DynamicPartMappings", testDynamicPartMappingsHooks)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsHooks)
	t.Run("DynamicPartPixels", testDynamicPartPixelsHooks)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsHooks)
	t.Run("Props", testPropsHooks)
	t.Run("PropImages", testPropImagesHooks)
	t.Run("SchemaMigrations", testSchemaMigrationsHooks)
	t.Run("StaticParts", testStaticPartsHooks)
	t.Run("StaticPartImages", testStaticPartImagesHooks)
}

func TestInsert(t *testing.T) {
	t.Run("Animations", testAnimationsInsert)
	t.Run("Animations", testAnimationsInsertWhitelist)
	t.Run("AnimationFrames", testAnimationFramesInsert)
	t.Run("AnimationFrames", testAnimationFramesInsertWhitelist)
	t.Run("AnimationFramePixels", testAnimationFramePixelsInsert)
	t.Run("AnimationFramePixels", testAnimationFramePixelsInsertWhitelist)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsInsert)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsInsertWhitelist)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsInsert)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsInsertWhitelist)
	t.Run("BodyTypes", testBodyTypesInsert)
	t.Run("BodyTypes", testBodyTypesInsertWhitelist)
	t.Run("ColorStrings", testColorStringsInsert)
	t.Run("ColorStrings", testColorStringsInsertWhitelist)
	t.Run("DynamicParts", testDynamicPartsInsert)
	t.Run("DynamicParts", testDynamicPartsInsertWhitelist)
	t.Run("DynamicPartMappings", testDynamicPartMappingsInsert)
	t.Run("DynamicPartMappings", testDynamicPartMappingsInsertWhitelist)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsInsert)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsInsertWhitelist)
	t.Run("DynamicPartPixels", testDynamicPartPixelsInsert)
	t.Run("DynamicPartPixels", testDynamicPartPixelsInsertWhitelist)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsInsert)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsInsertWhitelist)
	t.Run("Props", testPropsInsert)
	t.Run("Props", testPropsInsertWhitelist)
	t.Run("PropImages", testPropImagesInsert)
	t.Run("PropImages", testPropImagesInsertWhitelist)
	t.Run("SchemaMigrations", testSchemaMigrationsInsert)
	t.Run("SchemaMigrations", testSchemaMigrationsInsertWhitelist)
	t.Run("StaticParts", testStaticPartsInsert)
	t.Run("StaticParts", testStaticPartsInsertWhitelist)
	t.Run("StaticPartImages", testStaticPartImagesInsert)
	t.Run("StaticPartImages", testStaticPartImagesInsertWhitelist)
}

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("AnimationToBodyTypeUsingBodyType", testAnimationToOneBodyTypeUsingBodyType)
	t.Run("AnimationFrameToAnimationUsingAnimation", testAnimationFrameToOneAnimationUsingAnimation)
	t.Run("AnimationFramePixelToAnimationFrameUsingAnimationFrame", testAnimationFramePixelToOneAnimationFrameUsingAnimationFrame)
	t.Run("AnimationFramePixelToColorStringUsingColorString", testAnimationFramePixelToOneColorStringUsingColorString)
	t.Run("AnimationFramePropPositionToAnimationFrameUsingAnimationFrame", testAnimationFramePropPositionToOneAnimationFrameUsingAnimationFrame)
	t.Run("AnimationFrameStaticPositionToAnimationFrameUsingAnimationFrame", testAnimationFrameStaticPositionToOneAnimationFrameUsingAnimationFrame)
	t.Run("DynamicPartToDynamicPartMappingUsingDynamicPartMapping", testDynamicPartToOneDynamicPartMappingUsingDynamicPartMapping)
	t.Run("DynamicPartMappingToBodyTypeUsingBodyType", testDynamicPartMappingToOneBodyTypeUsingBodyType)
	t.Run("DynamicPartMappingPixelToColorStringUsingColorString", testDynamicPartMappingPixelToOneColorStringUsingColorString)
	t.Run("DynamicPartMappingPixelToDynamicPartMappingUsingDynamicPartMapping", testDynamicPartMappingPixelToOneDynamicPartMappingUsingDynamicPartMapping)
	t.Run("DynamicPartPixelToColorStringUsingColorString", testDynamicPartPixelToOneColorStringUsingColorString)
	t.Run("DynamicPartPixelToDynamicPartUsingDynamicPart", testDynamicPartPixelToOneDynamicPartUsingDynamicPart)
	t.Run("DynamicPartThumbnailToDynamicPartUsingDynamicPart", testDynamicPartThumbnailToOneDynamicPartUsingDynamicPart)
	t.Run("PropImageToPropUsingProp", testPropImageToOnePropUsingProp)
	t.Run("StaticPartToBodyTypeUsingBodyType", testStaticPartToOneBodyTypeUsingBodyType)
	t.Run("StaticPartImageToStaticPartUsingStaticPart", testStaticPartImageToOneStaticPartUsingStaticPart)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {
	t.Run("AnimationFrameToAnimationFramePropPositionUsingAnimationFramePropPosition", testAnimationFrameOneToOneAnimationFramePropPositionUsingAnimationFramePropPosition)
	t.Run("DynamicPartToDynamicPartThumbnailUsingDynamicPartThumbnail", testDynamicPartOneToOneDynamicPartThumbnailUsingDynamicPartThumbnail)
	t.Run("PropToPropImageUsingPropImage", testPropOneToOnePropImageUsingPropImage)
	t.Run("StaticPartToStaticPartImageUsingStaticPartImage", testStaticPartOneToOneStaticPartImageUsingStaticPartImage)
}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("AnimationToAnimationFrames", testAnimationToManyAnimationFrames)
	t.Run("AnimationFrameToAnimationFramePixels", testAnimationFrameToManyAnimationFramePixels)
	t.Run("AnimationFrameToAnimationFrameStaticPositions", testAnimationFrameToManyAnimationFrameStaticPositions)
	t.Run("BodyTypeToAnimations", testBodyTypeToManyAnimations)
	t.Run("BodyTypeToDynamicPartMappings", testBodyTypeToManyDynamicPartMappings)
	t.Run("BodyTypeToStaticParts", testBodyTypeToManyStaticParts)
	t.Run("ColorStringToAnimationFramePixels", testColorStringToManyAnimationFramePixels)
	t.Run("ColorStringToDynamicPartMappingPixels", testColorStringToManyDynamicPartMappingPixels)
	t.Run("ColorStringToDynamicPartPixels", testColorStringToManyDynamicPartPixels)
	t.Run("DynamicPartToDynamicPartPixels", testDynamicPartToManyDynamicPartPixels)
	t.Run("DynamicPartMappingToDynamicParts", testDynamicPartMappingToManyDynamicParts)
	t.Run("DynamicPartMappingToDynamicPartMappingPixels", testDynamicPartMappingToManyDynamicPartMappingPixels)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("AnimationToBodyTypeUsingAnimations", testAnimationToOneSetOpBodyTypeUsingBodyType)
	t.Run("AnimationFrameToAnimationUsingAnimationFrames", testAnimationFrameToOneSetOpAnimationUsingAnimation)
	t.Run("AnimationFramePixelToAnimationFrameUsingAnimationFramePixels", testAnimationFramePixelToOneSetOpAnimationFrameUsingAnimationFrame)
	t.Run("AnimationFramePixelToColorStringUsingAnimationFramePixels", testAnimationFramePixelToOneSetOpColorStringUsingColorString)
	t.Run("AnimationFramePropPositionToAnimationFrameUsingAnimationFramePropPosition", testAnimationFramePropPositionToOneSetOpAnimationFrameUsingAnimationFrame)
	t.Run("AnimationFrameStaticPositionToAnimationFrameUsingAnimationFrameStaticPositions", testAnimationFrameStaticPositionToOneSetOpAnimationFrameUsingAnimationFrame)
	t.Run("DynamicPartToDynamicPartMappingUsingDynamicParts", testDynamicPartToOneSetOpDynamicPartMappingUsingDynamicPartMapping)
	t.Run("DynamicPartMappingToBodyTypeUsingDynamicPartMappings", testDynamicPartMappingToOneSetOpBodyTypeUsingBodyType)
	t.Run("DynamicPartMappingPixelToColorStringUsingDynamicPartMappingPixels", testDynamicPartMappingPixelToOneSetOpColorStringUsingColorString)
	t.Run("DynamicPartMappingPixelToDynamicPartMappingUsingDynamicPartMappingPixels", testDynamicPartMappingPixelToOneSetOpDynamicPartMappingUsingDynamicPartMapping)
	t.Run("DynamicPartPixelToColorStringUsingDynamicPartPixels", testDynamicPartPixelToOneSetOpColorStringUsingColorString)
	t.Run("DynamicPartPixelToDynamicPartUsingDynamicPartPixels", testDynamicPartPixelToOneSetOpDynamicPartUsingDynamicPart)
	t.Run("DynamicPartThumbnailToDynamicPartUsingDynamicPartThumbnail", testDynamicPartThumbnailToOneSetOpDynamicPartUsingDynamicPart)
	t.Run("PropImageToPropUsingPropImage", testPropImageToOneSetOpPropUsingProp)
	t.Run("StaticPartToBodyTypeUsingStaticParts", testStaticPartToOneSetOpBodyTypeUsingBodyType)
	t.Run("StaticPartImageToStaticPartUsingStaticPartImage", testStaticPartImageToOneSetOpStaticPartUsingStaticPart)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {
	t.Run("AnimationFrameToAnimationFramePropPositionUsingAnimationFramePropPosition", testAnimationFrameOneToOneSetOpAnimationFramePropPositionUsingAnimationFramePropPosition)
	t.Run("DynamicPartToDynamicPartThumbnailUsingDynamicPartThumbnail", testDynamicPartOneToOneSetOpDynamicPartThumbnailUsingDynamicPartThumbnail)
	t.Run("PropToPropImageUsingPropImage", testPropOneToOneSetOpPropImageUsingPropImage)
	t.Run("StaticPartToStaticPartImageUsingStaticPartImage", testStaticPartOneToOneSetOpStaticPartImageUsingStaticPartImage)
}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("AnimationToAnimationFrames", testAnimationToManyAddOpAnimationFrames)
	t.Run("AnimationFrameToAnimationFramePixels", testAnimationFrameToManyAddOpAnimationFramePixels)
	t.Run("AnimationFrameToAnimationFrameStaticPositions", testAnimationFrameToManyAddOpAnimationFrameStaticPositions)
	t.Run("BodyTypeToAnimations", testBodyTypeToManyAddOpAnimations)
	t.Run("BodyTypeToDynamicPartMappings", testBodyTypeToManyAddOpDynamicPartMappings)
	t.Run("BodyTypeToStaticParts", testBodyTypeToManyAddOpStaticParts)
	t.Run("ColorStringToAnimationFramePixels", testColorStringToManyAddOpAnimationFramePixels)
	t.Run("ColorStringToDynamicPartMappingPixels", testColorStringToManyAddOpDynamicPartMappingPixels)
	t.Run("ColorStringToDynamicPartPixels", testColorStringToManyAddOpDynamicPartPixels)
	t.Run("DynamicPartToDynamicPartPixels", testDynamicPartToManyAddOpDynamicPartPixels)
	t.Run("DynamicPartMappingToDynamicParts", testDynamicPartMappingToManyAddOpDynamicParts)
	t.Run("DynamicPartMappingToDynamicPartMappingPixels", testDynamicPartMappingToManyAddOpDynamicPartMappingPixels)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {}

func TestReload(t *testing.T) {
	t.Run("Animations", testAnimationsReload)
	t.Run("AnimationFrames", testAnimationFramesReload)
	t.Run("AnimationFramePixels", testAnimationFramePixelsReload)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsReload)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsReload)
	t.Run("BodyTypes", testBodyTypesReload)
	t.Run("ColorStrings", testColorStringsReload)
	t.Run("DynamicParts", testDynamicPartsReload)
	t.Run("DynamicPartMappings", testDynamicPartMappingsReload)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsReload)
	t.Run("DynamicPartPixels", testDynamicPartPixelsReload)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsReload)
	t.Run("Props", testPropsReload)
	t.Run("PropImages", testPropImagesReload)
	t.Run("SchemaMigrations", testSchemaMigrationsReload)
	t.Run("StaticParts", testStaticPartsReload)
	t.Run("StaticPartImages", testStaticPartImagesReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("Animations", testAnimationsReloadAll)
	t.Run("AnimationFrames", testAnimationFramesReloadAll)
	t.Run("AnimationFramePixels", testAnimationFramePixelsReloadAll)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsReloadAll)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsReloadAll)
	t.Run("BodyTypes", testBodyTypesReloadAll)
	t.Run("ColorStrings", testColorStringsReloadAll)
	t.Run("DynamicParts", testDynamicPartsReloadAll)
	t.Run("DynamicPartMappings", testDynamicPartMappingsReloadAll)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsReloadAll)
	t.Run("DynamicPartPixels", testDynamicPartPixelsReloadAll)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsReloadAll)
	t.Run("Props", testPropsReloadAll)
	t.Run("PropImages", testPropImagesReloadAll)
	t.Run("SchemaMigrations", testSchemaMigrationsReloadAll)
	t.Run("StaticParts", testStaticPartsReloadAll)
	t.Run("StaticPartImages", testStaticPartImagesReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("Animations", testAnimationsSelect)
	t.Run("AnimationFrames", testAnimationFramesSelect)
	t.Run("AnimationFramePixels", testAnimationFramePixelsSelect)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsSelect)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsSelect)
	t.Run("BodyTypes", testBodyTypesSelect)
	t.Run("ColorStrings", testColorStringsSelect)
	t.Run("DynamicParts", testDynamicPartsSelect)
	t.Run("DynamicPartMappings", testDynamicPartMappingsSelect)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsSelect)
	t.Run("DynamicPartPixels", testDynamicPartPixelsSelect)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsSelect)
	t.Run("Props", testPropsSelect)
	t.Run("PropImages", testPropImagesSelect)
	t.Run("SchemaMigrations", testSchemaMigrationsSelect)
	t.Run("StaticParts", testStaticPartsSelect)
	t.Run("StaticPartImages", testStaticPartImagesSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("Animations", testAnimationsUpdate)
	t.Run("AnimationFrames", testAnimationFramesUpdate)
	t.Run("AnimationFramePixels", testAnimationFramePixelsUpdate)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsUpdate)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsUpdate)
	t.Run("BodyTypes", testBodyTypesUpdate)
	t.Run("ColorStrings", testColorStringsUpdate)
	t.Run("DynamicParts", testDynamicPartsUpdate)
	t.Run("DynamicPartMappings", testDynamicPartMappingsUpdate)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsUpdate)
	t.Run("DynamicPartPixels", testDynamicPartPixelsUpdate)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsUpdate)
	t.Run("Props", testPropsUpdate)
	t.Run("PropImages", testPropImagesUpdate)
	t.Run("SchemaMigrations", testSchemaMigrationsUpdate)
	t.Run("StaticParts", testStaticPartsUpdate)
	t.Run("StaticPartImages", testStaticPartImagesUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("Animations", testAnimationsSliceUpdateAll)
	t.Run("AnimationFrames", testAnimationFramesSliceUpdateAll)
	t.Run("AnimationFramePixels", testAnimationFramePixelsSliceUpdateAll)
	t.Run("AnimationFramePropPositions", testAnimationFramePropPositionsSliceUpdateAll)
	t.Run("AnimationFrameStaticPositions", testAnimationFrameStaticPositionsSliceUpdateAll)
	t.Run("BodyTypes", testBodyTypesSliceUpdateAll)
	t.Run("ColorStrings", testColorStringsSliceUpdateAll)
	t.Run("DynamicParts", testDynamicPartsSliceUpdateAll)
	t.Run("DynamicPartMappings", testDynamicPartMappingsSliceUpdateAll)
	t.Run("DynamicPartMappingPixels", testDynamicPartMappingPixelsSliceUpdateAll)
	t.Run("DynamicPartPixels", testDynamicPartPixelsSliceUpdateAll)
	t.Run("DynamicPartThumbnails", testDynamicPartThumbnailsSliceUpdateAll)
	t.Run("Props", testPropsSliceUpdateAll)
	t.Run("PropImages", testPropImagesSliceUpdateAll)
	t.Run("SchemaMigrations", testSchemaMigrationsSliceUpdateAll)
	t.Run("StaticParts", testStaticPartsSliceUpdateAll)
	t.Run("StaticPartImages", testStaticPartImagesSliceUpdateAll)
}
